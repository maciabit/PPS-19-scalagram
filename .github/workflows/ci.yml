# This workflow will build a Scala project with Gradle

name: Scala CI with Gradle

on:
  push:
  pull_request:
  schedule:
    - cron: "0 4 * * SUN"

jobs:
  preliminary-build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Create application.properties file with the bot's token
        run: |
          mkdir -p src/main/resources
          echo token=${{secrets.BOT_TOKEN}} > src/main/resources/application.properties
      #- name: Build with Gradle
      #  run: ./gradlew build

  build:
    needs: preliminary-build
    strategy:
      matrix:
        os: [ubuntu]
        java_version: [14]
    runs-on: ${{matrix.os}}-latest
    env:
      OS: ${{matrix.os}}
      JAVA_VERSION: ${{matrix.java_version}}
    steps:
      - name: Print OS
        run: echo ${{env.OS}}
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{matrix.java_version}}
      - name: Compile Scala
        shell: bash
        run: ./gradlew compileScala
      - name: Compile Java
        shell: bash
        run: ./gradlew compileJava
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.OS}}_${{env.JAVA_VERSION}}
          path: build
      - name: Upload cache artifact
        uses: actions/upload-artifact@v2
        with:
          name: cache_${{env.OS}}_${{env.JAVA_VERSION}}
          path: .gradle

  test:
    needs: build
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        os: [ubuntu]
        java_version: [14]
    runs-on: ${{matrix.os}}-latest
    env:
      OS: ${{matrix.os}}
      JAVA_VERSION: ${{matrix.java_version}}
    steps:
      - uses: actions/checkout@v2
      - name: Create application.properties file with the bot's token
        run: |
          mkdir -p src/main/resources
          echo token=${{secrets.BOT_TOKEN}} > src/main/resources/application.properties
      - name: Create build directory
        shell: bash
        run: mkdir build
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{env.OS}}_${{env.JAVA_VERSION}}
          path: build
      - name: Create cache directory
        shell: bash
        run: mkdir .gradle
      - name: Download cache artifact
        uses: actions/download-artifact@v2
        with:
          name: cache_${{env.OS}}_${{env.JAVA_VERSION}}
          path: .gradle
      - name: pwd
        shell: bash
        run: |
          pwd
          ls -alh
      - name: Build with Gradle
        shell: bash
        run: ./gradlew build -x test
      - name: Tests with Gradle
        shell: bash
        run: ./gradlew test
      - name: Remove build artifact
        shell: bash
        run: rm -rf build
      - name: Remove bot token artifact
        shell: bash
        run: rm -rf src/main/resources/application.properties
      - name: Remove cache artifact
        shell: bash
        run: rm -rf .gradle
